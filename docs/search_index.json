[["data-analysis-and-visualization-using-r.html", "Conducting Empirical Research in Economics Chapter 1 Data Analysis and Visualization using R 1.1 Introduction to R and R Studio 1.2 Data transformation 1.3 Exploratory data analysis 1.4 Descriptive analysis 1.5 Data Visualization", " Conducting Empirical Research in Economics Mohammed Seid 2022-06-05 Chapter 1 Data Analysis and Visualization using R 1.1 Introduction to R and R Studio 1.2 Data transformation 1.3 Exploratory data analysis 1.4 Descriptive analysis 1.5 Data Visualization "],["regression-analysis-using-r.html", "Chapter 2 Regression analysis using R 2.1 Analysis of cross-sectional data 2.2 Analysis of categorical Data 2.3 Analysis of timeseries data 2.4 Analysis of panel data", " Chapter 2 Regression analysis using R 2.1 Analysis of cross-sectional data 2.2 Analysis of categorical Data 2.3 Analysis of timeseries data 2.4 Analysis of panel data "],["causal-analysis-using-r.html", "Chapter 3 Causal analysis using R 3.1 Introduction to causality 3.2 Randomized experiment 3.3 Instrumental variables 3.4 Matching and subclassification 3.5 Panel data and fixed effect 3.6 Difference-in-Difference 3.7 Regression discontinuity Design 3.8 Heterogenous Treatment Effect", " Chapter 3 Causal analysis using R 3.1 Introduction to causality 3.2 Randomized experiment 3.3 Instrumental variables 3.4 Matching and subclassification 3.5 Panel data and fixed effect 3.6 Difference-in-Difference 3.7 Regression discontinuity Design 3.8 Heterogenous Treatment Effect "],["geospatial-analytics-using-r.html", "Chapter 4 Geospatial analytics using R 4.1 Core concepts, vector data, and plotting 4.2 Spatial analysis 4.3 Raster data", " Chapter 4 Geospatial analytics using R 4.1 Core concepts, vector data, and plotting 4.2 Spatial analysis 4.3 Raster data "],["advanced-r.html", "Chapter 5 Advanced R 5.1 Machine learning 5.2 Deep learning 5.3 Text mining", " Chapter 5 Advanced R 5.1 Machine learning 5.2 Deep learning 5.3 Text mining 5.3.1 Sentiment Analysis Sentiment Analysis (SA) extracts information on emotion or opinion from natural language (Silge and Robinson 2017). Most forms of SA provides information about positive or negative polarity, e.g. whether a tweet is positive or negative. This tutorial leverages the data provided in the janeaustenr package. This package contains the complete text of Jane Austen’s 6 completed, published novels, formatted to be convenient for text analysis. The tidytext package contains three sentiment lexicons in the sentiments dataset. The three lexicons are AFINN from Finn Årup Nielsen bing from Bing Liu and collaborators nrc from Saif Mohammad and Peter Turney library(tidytext) library(janeaustenr) library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union library(stringr) library(ggpubr) ## Loading required package: ggplot2 library(textdata) tidy_books &lt;- austen_books() %&gt;% group_by(book) %&gt;% mutate( linenumber = row_number(), chapter = cumsum(str_detect(text, regex(&quot;^chapter [\\\\divxlc]&quot;, ignore_case = TRUE)))) %&gt;% ungroup() %&gt;% unnest_tokens(word, text) tidy_books %&gt;% group_by(book) %&gt;% count() ## # A tibble: 6 × 2 ## # Groups: book [6] ## book n ## &lt;fct&gt; &lt;int&gt; ## 1 Sense &amp; Sensibility 119957 ## 2 Pride &amp; Prejudice 122204 ## 3 Mansfield Park 160460 ## 4 Emma 160996 ## 5 Northanger Abbey 77780 ## 6 Persuasion 83658 nrc_se &lt;- get_sentiments(&quot;nrc&quot;) nrc_se %&gt;% group_by(sentiment) %&gt;% count() ## # A tibble: 10 × 2 ## # Groups: sentiment [10] ## sentiment n ## &lt;chr&gt; &lt;int&gt; ## 1 anger 1246 ## 2 anticipation 837 ## 3 disgust 1056 ## 4 fear 1474 ## 5 joy 687 ## 6 negative 3318 ## 7 positive 2308 ## 8 sadness 1187 ## 9 surprise 532 ## 10 trust 1230 nrc_bing &lt;- get_sentiments(&quot;bing&quot;) nrc_bing %&gt;% group_by(sentiment) %&gt;% count() ## # A tibble: 2 × 2 ## # Groups: sentiment [2] ## sentiment n ## &lt;chr&gt; &lt;int&gt; ## 1 negative 4781 ## 2 positive 2005 nrc_afinn &lt;- get_sentiments(&quot;afinn&quot;) nrc_afinn %&gt;% group_by(value) %&gt;% count() ## # A tibble: 11 × 2 ## # Groups: value [11] ## value n ## &lt;dbl&gt; &lt;int&gt; ## 1 -5 16 ## 2 -4 43 ## 3 -3 264 ## 4 -2 966 ## 5 -1 309 ## 6 0 1 ## 7 1 208 ## 8 2 448 ## 9 3 172 ## 10 4 45 ## 11 5 5 nrc_joy &lt;- get_sentiments(&quot;nrc&quot;) %&gt;% filter(sentiment == &quot;joy&quot;) tidy_books %&gt;% filter(book == &quot;Emma&quot;) %&gt;% inner_join(nrc_joy) %&gt;% count(word, sort = TRUE) ## Joining, by = &quot;word&quot; ## # A tibble: 301 × 2 ## word n ## &lt;chr&gt; &lt;int&gt; ## 1 good 359 ## 2 friend 166 ## 3 hope 143 ## 4 happy 125 ## 5 love 117 ## 6 deal 92 ## 7 found 92 ## 8 present 89 ## 9 kind 82 ## 10 happiness 76 ## # … with 291 more rows library(tidyr) jane_austen_sentiment &lt;- tidy_books %&gt;% inner_join(get_sentiments(&quot;bing&quot;)) %&gt;% count(book, index = linenumber %/% 80, sentiment) %&gt;% pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %&gt;% mutate(sentiment = positive - negative) ## Joining, by = &quot;word&quot; create an index that breaks up each book by 500 words; this is the approximate number of words on every two pages so this will allow us to assess changes in sentiment even within chapters library(ggplot2) ggplot(jane_austen_sentiment, aes(index, sentiment, fill = book)) + geom_col(show.legend = FALSE) + facet_wrap(~book, ncol = 2, scales = &quot;free_x&quot;) pride_prejudice &lt;- tidy_books %&gt;% filter(book == &quot;Pride &amp; Prejudice&quot;) pride_prejudice ## # A tibble: 122,204 × 4 ## book linenumber chapter word ## &lt;fct&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; ## 1 Pride &amp; Prejudice 1 0 pride ## 2 Pride &amp; Prejudice 1 0 and ## 3 Pride &amp; Prejudice 1 0 prejudice ## 4 Pride &amp; Prejudice 3 0 by ## 5 Pride &amp; Prejudice 3 0 jane ## 6 Pride &amp; Prejudice 3 0 austen ## 7 Pride &amp; Prejudice 7 1 chapter ## 8 Pride &amp; Prejudice 7 1 1 ## 9 Pride &amp; Prejudice 10 1 it ## 10 Pride &amp; Prejudice 10 1 is ## # … with 122,194 more rows afinn &lt;- pride_prejudice %&gt;% inner_join(get_sentiments(&quot;afinn&quot;)) %&gt;% group_by(index = linenumber %/% 80) %&gt;% summarise(sentiment = sum(value)) %&gt;% mutate(method = &quot;AFINN&quot;) ## Joining, by = &quot;word&quot; bing_and_nrc &lt;- bind_rows( pride_prejudice %&gt;% inner_join(get_sentiments(&quot;bing&quot;)) %&gt;% mutate(method = &quot;Bing et al.&quot;), pride_prejudice %&gt;% inner_join(get_sentiments(&quot;nrc&quot;) %&gt;% filter(sentiment %in% c(&quot;positive&quot;, &quot;negative&quot;)) ) %&gt;% mutate(method = &quot;NRC&quot;)) %&gt;% count(method, index = linenumber %/% 80, sentiment) %&gt;% pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %&gt;% mutate(sentiment = positive - negative) ## Joining, by = &quot;word&quot; ## Joining, by = &quot;word&quot; bind_rows(afinn, bing_and_nrc) %&gt;% ggplot(aes(index, sentiment, fill = method)) + geom_col(show.legend = FALSE) + facet_wrap(~method, ncol = 1, scales = &quot;free_y&quot;) get_sentiments(&quot;nrc&quot;) %&gt;% filter(sentiment %in% c(&quot;positive&quot;, &quot;negative&quot;)) %&gt;% count(sentiment) ## # A tibble: 2 × 2 ## sentiment n ## &lt;chr&gt; &lt;int&gt; ## 1 negative 3318 ## 2 positive 2308 get_sentiments(&quot;bing&quot;) %&gt;% count(sentiment) ## # A tibble: 2 × 2 ## sentiment n ## &lt;chr&gt; &lt;int&gt; ## 1 negative 4781 ## 2 positive 2005 bing_word_counts &lt;- tidy_books %&gt;% inner_join(get_sentiments(&quot;bing&quot;)) %&gt;% count(word, sentiment, sort = TRUE) %&gt;% ungroup() ## Joining, by = &quot;word&quot; bing_word_counts %&gt;% group_by(sentiment) %&gt;% slice_max(n, n = 10) %&gt;% ungroup() %&gt;% mutate(word = reorder(word, n)) %&gt;% ggplot(aes(n, word, fill = sentiment)) + geom_col(show.legend = FALSE) + facet_wrap(~sentiment, scales = &quot;free_y&quot;) + labs(x = &quot;Contribution to sentiment&quot;, y = NULL) + theme_pubr() custom_stop_words &lt;- bind_rows(tibble(word = c(&quot;miss&quot;), lexicon = c(&quot;custom&quot;)), stop_words) library(wordcloud) ## Loading required package: RColorBrewer tidy_books %&gt;% anti_join(stop_words) %&gt;% count(word) %&gt;% with(wordcloud(word, n, max.words = 100)) ## Joining, by = &quot;word&quot; library(reshape2) ## ## Attaching package: &#39;reshape2&#39; ## The following object is masked from &#39;package:tidyr&#39;: ## ## smiths tidy_books %&gt;% inner_join(get_sentiments(&quot;bing&quot;)) %&gt;% count(word, sentiment, sort = TRUE) %&gt;% acast(word ~ sentiment, value.var = &quot;n&quot;, fill = 0) %&gt;% comparison.cloud(colors = c(&quot;gray20&quot;, &quot;gray80&quot;), max.words = 100) ## Joining, by = &quot;word&quot; "],["trade-policy-analysis-with-r.html", "Chapter 6 Trade policy analysis with R 6.1 Analyzing trade flow 6.2 Analyzing trade tariff 6.3 The gravity model of Trade", " Chapter 6 Trade policy analysis with R 6.1 Analyzing trade flow 6.2 Analyzing trade tariff 6.3 The gravity model of Trade "],["quantitative-finance-with-r.html", "Chapter 7 Quantitative Finance with R 7.1 Modern portfolio theory 7.2 Financial models 7.3 Analyze financial assets to find their Return On Investment (ROI) 7.4 profit-making strategy", " Chapter 7 Quantitative Finance with R 7.1 Modern portfolio theory 7.2 Financial models 7.3 Analyze financial assets to find their Return On Investment (ROI) 7.4 profit-making strategy "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
